<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9OCgCvTgoEr04KKq9OCm2vTgqtr04K2a9O
        CvKrTAr9j0AG/os+BvSLPgbcjD4GsIw+Bm+MPwYrj0AGBI0/BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9OCgCvTgoEr04KN69OCpivTgrgr04K+69O
        Cv+vTgr/r04K/6tMCv+PQAb/iz4G/4s+Bv+LPgb/iz4G/Is+BuGLPgabjD4GOY5ABgSNPwYAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9OCgCvTgoAr04KGq9OCoqvTgrqr04K/69O
        Cv+vTgr/r04K/69OCv+vTgr/q0wK/49ABv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgbrjD4GjI0/
        BhuLPgYAkkEHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvTgoAr04KAK9OCjWvTgrCr04K/q9O
        Cv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+rTAr/j0AG/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb+iz4GxIw+BjeFOgUAj0AGAAAAAAAAAAAAAAAAAAAAAAAAAAAAr04KAK9OCgCvTgpBr04K2a9O
        Cv+vTgr/r04K/69OCv+vTgr/r04K/65MCP+uTAj/rkwI/6pKCP+OPgT/ijwE/4o8BP+KPAT/ij0F/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G2ow+BkOIPAYAj0AGAAAAAAAAAAAAAAAAAK9OCgCvTgoAr04KNq9O
        CtmvTgr/r04K/69OCv+vTgr/r04K/69NCf+2XR//16eG/9uxk//bsJL/2a6O/82ieP/LoHT/y6B0/8yi
        dv+1f0//jD8H/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G2ow+BjiLPgYAkEEGAAAAAAAAAAAAr04KAK9O
        ChqvTgrCr04K/69OCv+vTgr/r04K/69OCv+vTgr/rkwI/7tqMP/47+n//////////////fn///TV///y
        z///8s////PR/9i0i/+MPwj/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4GxI0/BhyMPwYAAAAAAK9O
        CgCvTgoCr04Kiq9OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTQn/s1cX/8eDU//XpoT//fr5///9
        +f//8dL///HN/+3Trf+2gE//pWUy/4s+B/+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/jD4GjJBA
        BgOOPwYAr04KAK9OCjivTgrpr04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgn/rUkD/8F2
        Qv/8+PX///75///x0v//8c7/48Sc/45CC/+JPAT/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgbrjD4GOow+BgCvTgoDr04KmK9OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69O
        Cv+uSwb/wnhF//z49v///vn///HS///xzv/jxZ3/kEUO/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgaakUEGA69OCiqvTgrfr04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69O
        Cv+vTgr/r04K/65LBv/CeEX//Pj2///++f//8dL///HO/+PFnf+QRQ7/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+BuCMPwYsr04Kba9OCvuvTgr/r04K/69OCv+vTgr/r04K/69O
        Cv+vTgr/r04K/69OCv+vTgr/rksG/8J4Rf/8+Pb///75///x0v//8c7/48Wd/5BFDv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/Iw+Bm+vTgqtr04K/69OCv+vTgr/r04K/69O
        Cv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+uSwb/wnhF//z49v///vn///HS///xzv/jxZ3/kEUO/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/jD4Gr69OCtmvTgr/r04K/69O
        Cv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/65LBv/CeEX//Pj2///++f//8dL///HO/+PF
        nf+QRQ7/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgbbr04K8q9O
        Cv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/rksG/8J4Rf/8+Pb///75///x
        0v//8c7/48Wd/5BFDv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        BvSvTgr8r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCf+tSQP/wXZC//z4
        9f///vn///HS///xzv/jxZ3/kEUO/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/q9OCvyvTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTQn/s1cX/8eD
        U//XpoT//fr5///9+f//8dL///HO/+PFnf+QRQ7/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb+r04K8q9OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/65M
        CP+7ajD/+O/p//////////////35///01f//9NL/48ef/5BFDv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+BvSvTgrZr04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69O
        Cv+vTgr/r00J/7ZdH//Xp4b/27GT/9uwkv/Zro7/zaJ4/8yhdf+8iVr/jkIK/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G269OCq2vTgr/r04K/69OCv+vTgr/r04K/69O
        Cv+vTgr/r04K/69OCv+vTgr/r04K/65MCP+uTAj/rkoF/6lIBP+NPAL/iDoC/4o8BP+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+MPgavr04Kba9OCvuvTgr/r04K/69O
        Cv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r00J/7BQDf/De0j/1qaC/8ibcP+pbDr/jUEJ/4s9
        Bf+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/Iw+Bm+vTgoqr04K369O
        Cv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+wUAz/0596//r18f///vr///PV//nm
        wv/BkWP/jEAI/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgbgjD8GLK9O
        CgOvTgqYr04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/rkwH/8BzPf/48Or////////9
        +f//8dL///DN//bivv+kZDH/ijwE/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        BpqRQQYDr04KAK9OCjivTgrpr04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/69OCv+uSwb/z5Zu////
        //////////35///x0v//78z///DO/7uIWf+JOwP/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgbrjD4GOow+BgCvTgoAr04KAq9OCoqvTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r04K/65L
        Bv/NkGb///7+/////////fn///HS///vzP//78z/t4JT/4k7A/+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4w+BoyQQAYDjj8GAAAAAACvTgoAr04KGq9OCsKvTgr/r04K/69OCv+vTgr/r04K/69O
        Cv+vTgr/rkwI/7pnLf/z5Nr////////9+f//8dL///LP/+7Wsf+cWCP/ijwE/4s+Bv+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgbEjT8GHIw/BgAAAAAAAAAAAK9OCgCvTgoAr04KNq9OCtmvTgr/r04K/69O
        Cv+vTgr/r04K/69OCv+vTgr/r00J/8eDU//x4NX//fr0//3uz//s0av/r3RD/4s9Bf+LPgb/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G2ow+BjiLPgYAkEEGAAAAAAAAAAAAAAAAAK9OCgCvTgoAr04KQa9O
        CtmvTgr/r04K/69OCv+vTgr/r04K/69OCv+vTgr/r00I/7hhJf/EgE//sHVE/5hSHf+KPQX/iz4G/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+BtqMPgZDiDwGAI9ABgAAAAAAAAAAAAAAAAAAAAAAAAAAAK9O
        CgCvTgoAr04KNa9OCsKvTgr+r04K/69OCv+vTgr/r04K/69OCv+vTgr/r00I/6pJBv+OPQP/ij0F/4s+
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv6LPgbEjD4GN4U6BQCPQAYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAK9OCgCvTgoAr04KGq9OCoqvTgrqr04K/69OCv+vTgr/r04K/69OCv+vTgr/q0wK/49A
        Bv+LPgb/iz4G/4s+Bv+LPgb/iz4G/4s+Bv+LPgbrjD4GjI0/BhuLPgYAkkEHAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvTgoAr04KBK9OCjevTgqYr04K4K9OCvuvTgr/r04K/69O
        Cv+rTAr/j0AG/4s+Bv+LPgb/iz4G/4s+BvyLPgbhiz4Gm4w+BjmOQAYEjT8GAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr04KAK9OCgSvTgoqr04Kba9O
        Cq2vTgrZr04K8qtMCv2PQAb+iz4G9Is+BtyMPgawjD4Gb4w/BiuPQAYEjT8GAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>